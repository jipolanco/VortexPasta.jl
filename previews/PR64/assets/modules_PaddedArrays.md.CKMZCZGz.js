import{_ as l,C as p,c as r,o as h,j as i,a as t,aA as n,G as e,w as d}from"./chunks/framework.8SZvSuo1.js";const m=JSON.parse('{"title":"PaddedArrays","description":"","frontmatter":{},"headers":[],"relativePath":"modules/PaddedArrays.md","filePath":"modules/PaddedArrays.md","lastUpdated":null}'),k={name:"modules/PaddedArrays.md"},o={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""};function E(u,s,F,C,P,A){const a=p("Badge");return h(),r("div",null,[s[16]||(s[16]=i("h1",{id:"PaddedArrays",tabindex:"-1"},[t("PaddedArrays "),i("a",{class:"header-anchor",href:"#PaddedArrays","aria-label":'Permalink to "PaddedArrays {#PaddedArrays}"'},"​")],-1)),i("details",o,[i("summary",null,[s[0]||(s[0]=i("a",{id:"VortexPasta.PaddedArrays",href:"#VortexPasta.PaddedArrays"},[i("span",{class:"jlbinding"},"VortexPasta.PaddedArrays")],-1)),s[1]||(s[1]=t()),e(a,{type:"info",class:"jlObjectType jlModule",text:"Module"})]),s[3]||(s[3]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PaddedArrays</span></span></code></pre></div><p>Module defining the <a href="/VortexPasta.jl/previews/PR64/modules/PaddedArrays#VortexPasta.PaddedArrays.PaddedArray"><code>PaddedArray</code></a> type for dealing with arrays padded by ghost cells.</p><p>Among other things, this type allows to efficiently work with periodic boundary conditions in one and more spatial dimensions.</p>',3)),e(a,{type:"info",class:"source-link",text:"source"},{default:d(()=>[...s[2]||(s[2]=[i("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s[17]||(s[17]=i("h2",{id:"Types",tabindex:"-1"},[t("Types "),i("a",{class:"header-anchor",href:"#Types","aria-label":'Permalink to "Types {#Types}"'},"​")],-1)),i("details",c,[i("summary",null,[s[4]||(s[4]=i("a",{id:"VortexPasta.PaddedArrays.PaddedArray",href:"#VortexPasta.PaddedArrays.PaddedArray"},[i("span",{class:"jlbinding"},"VortexPasta.PaddedArrays.PaddedArray")],-1)),s[5]||(s[5]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[7]||(s[7]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PaddedArray{M, T, N} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractArray{T, N}</span></span></code></pre></div><p>Pads a vector with <code>M</code> &quot;ghost&quot; entries on each side, along each direction.</p><p>Can be useful for dealing with periodic boundary conditions. In that use case, one can call <a href="/VortexPasta.jl/previews/PR64/modules/PaddedArrays#VortexPasta.PaddedArrays.pad_periodic!"><code>pad_periodic!</code></a> once the non-ghost entries have been filled to conveniently impose those kind of conditions.</p><p>See also <a href="/VortexPasta.jl/previews/PR64/modules/PaddedArrays#VortexPasta.PaddedArrays.PaddedVector"><code>PaddedVector</code></a>.</p><hr><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PaddedArray{M}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Interpret input array as a padded array.</p><p>Note that the input array is not modified. Instead, its <code>M</code> first and <code>M</code> last entries along each direction are considered as &quot;ghost&quot; entries.</p><p>In other words, the &quot;logical&quot; dimensions of the resulting <code>PaddedArray</code> are <code>size(v) = size(data) .- 2M</code>. Along a given direction of size <code>N</code>, indexing functions like <code>axes</code> return the range <code>1:N</code> (or an equivalent). However, the array can in reality be indexed (and modified) over the range <code>(1 - M):(N + M)</code>.</p><p>See <a href="/VortexPasta.jl/previews/PR64/modules/PaddedArrays#VortexPasta.PaddedArrays.PaddedVector"><code>PaddedVector</code></a> for some one-dimensional examples.</p>',10)),e(a,{type:"info",class:"source-link",text:"source"},{default:d(()=>[...s[6]||(s[6]=[i("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",y,[i("summary",null,[s[8]||(s[8]=i("a",{id:"VortexPasta.PaddedArrays.PaddedVector",href:"#VortexPasta.PaddedArrays.PaddedVector"},[i("span",{class:"jlbinding"},"VortexPasta.PaddedArrays.PaddedVector")],-1)),s[9]||(s[9]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[11]||(s[11]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PaddedVector{M, T} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractVector{T}</span></span></code></pre></div><p>Alias for <code>PaddedArray{M, T, 1}</code> which can be used to work with one-dimensional data.</p><hr><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PaddedVector{M}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Interpret input vector as a padded vector.</p><p>See <a href="/VortexPasta.jl/previews/PR64/modules/PaddedArrays#VortexPasta.PaddedArrays.PaddedArray"><code>PaddedArray</code></a> for details.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> PaddedVector{2}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">collect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">element PaddedVector{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Int64, Vector{Int64}}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 6</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 7</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> eachindex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(v)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">OneTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">begin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">begin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">end</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">end</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 42</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(v)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">42</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div>`,8)),e(a,{type:"info",class:"source-link",text:"source"},{default:d(()=>[...s[10]||(s[10]=[i("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s[18]||(s[18]=i("h2",{id:"Functions",tabindex:"-1"},[t("Functions "),i("a",{class:"header-anchor",href:"#Functions","aria-label":'Permalink to "Functions {#Functions}"'},"​")],-1)),i("details",g,[i("summary",null,[s[12]||(s[12]=i("a",{id:"VortexPasta.PaddedArrays.pad_periodic!",href:"#VortexPasta.PaddedArrays.pad_periodic!"},[i("span",{class:"jlbinding"},"VortexPasta.PaddedArrays.pad_periodic!")],-1)),s[13]||(s[13]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[15]||(s[15]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pad_periodic!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(v</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PaddedArray{M, T, N}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [L </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> zero</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(T)])</span></span></code></pre></div><p>Fill ghost cells in a periodic manner.</p><p>In the simplest case of a 1D <code>PaddedArray</code> (<code>N = 1</code>), this function will copy:</p><ul><li><p><code>v[begin:(begin + M - 1)]</code> → <code>v[(end + 1):(end + M)]</code>, and</p></li><li><p><code>v[(end - M + 1):end]</code> → <code>v[(begin - M):(begin - 1)]</code>.</p></li></ul><p>Something equivalent (but more complicated) is done in multiple dimensions.</p><p>If <code>L ≠ 0</code>, it is interpreted as an unfolding period (or as an end-to-end distance after a single period), such that <code>v[N + i] - v[i] = L</code>, where <code>N = length(v)</code>.</p>',6)),e(a,{type:"info",class:"source-link",text:"source"},{default:d(()=>[...s[14]||(s[14]=[i("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const v=l(k,[["render",E]]);export{m as __pageData,v as default};
