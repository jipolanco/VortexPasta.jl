import{_ as d,C as p,c as o,o as r,j as t,a as s,aA as l,G as a,w as n}from"./chunks/framework.BaRYLbWR.js";const M=JSON.parse('{"title":"SyntheticFields","description":"","frontmatter":{},"headers":[],"relativePath":"modules/SyntheticFields.md","filePath":"modules/SyntheticFields.md","lastUpdated":null}'),h={name:"modules/SyntheticFields.md"},T={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},u={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},Q={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.564ex"},xmlns:"http://www.w3.org/2000/svg",width:"17.036ex",height:"2.26ex",role:"img",focusable:"false",viewBox:"0 -749.5 7529.8 999","aria-hidden":"true"},m={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},g={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.421ex",height:"1.532ex",role:"img",focusable:"false",viewBox:"0 -666 1070 677","aria-hidden":"true"},y={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},x={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},V={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.564ex"},xmlns:"http://www.w3.org/2000/svg",width:"3.612ex",height:"2.451ex",role:"img",focusable:"false",viewBox:"0 -833.9 1596.6 1083.4","aria-hidden":"true"},b={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},S={class:"jldocstring custom-block",open:""},_={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},C={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"2.009ex",height:"1.545ex",role:"img",focusable:"false",viewBox:"0 -683 888 683","aria-hidden":"true"},w={class:"jldocstring custom-block",open:""};function j(H,e,P,A,D,L){const i=p("Badge");return r(),o("div",null,[e[81]||(e[81]=t("h1",{id:"SyntheticFields",tabindex:"-1"},[s("SyntheticFields "),t("a",{class:"header-anchor",href:"#SyntheticFields","aria-label":'Permalink to "SyntheticFields {#SyntheticFields}"'},"​")],-1)),t("details",T,[t("summary",null,[e[0]||(e[0]=t("a",{id:"VortexPasta.SyntheticFields",href:"#VortexPasta.SyntheticFields"},[t("span",{class:"jlbinding"},"VortexPasta.SyntheticFields")],-1)),e[1]||(e[1]=s()),a(i,{type:"info",class:"jlObjectType jlModule",text:"Module"})]),e[3]||(e[3]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SyntheticFields</span></span></code></pre></div><p>Provides implementations of synthetic vector fields.</p><p>These can be used to represent a &quot;normal&quot; fluid velocity field which influences the motion of vortex lines.</p>',3)),a(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[2]||(e[2]=[t("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),e[82]||(e[82]=t("h2",{id:"Uniform-vector-fields",tabindex:"-1"},[s("Uniform vector fields "),t("a",{class:"header-anchor",href:"#Uniform-vector-fields","aria-label":'Permalink to "Uniform vector fields {#Uniform-vector-fields}"'},"​")],-1)),t("details",c,[t("summary",null,[e[4]||(e[4]=t("a",{id:"VortexPasta.SyntheticFields.UniformVectorField",href:"#VortexPasta.SyntheticFields.UniformVectorField"},[t("span",{class:"jlbinding"},"VortexPasta.SyntheticFields.UniformVectorField")],-1)),e[5]||(e[5]=s()),a(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[7]||(e[7]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">UniformVectorField{T, N} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SyntheticVectorField{T, N}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UniformVectorField</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(u⃗)</span></span></code></pre></div><p>Represents a uniform (constant) vector field with no spatial fluctuations.</p><p>This can be used for instance to represent a uniform counterflow.</p><p>The input <code>u⃗</code> can be an <code>SVector{N, T}</code> or a tuple.</p>`,4)),a(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[6]||(e[6]=[t("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),e[83]||(e[83]=t("h2",{id:"Fourier-vector-fields",tabindex:"-1"},[s("Fourier vector fields "),t("a",{class:"header-anchor",href:"#Fourier-vector-fields","aria-label":'Permalink to "Fourier vector fields {#Fourier-vector-fields}"'},"​")],-1)),t("details",k,[t("summary",null,[e[8]||(e[8]=t("a",{id:"VortexPasta.SyntheticFields.FourierBandVectorField",href:"#VortexPasta.SyntheticFields.FourierBandVectorField"},[t("span",{class:"jlbinding"},"VortexPasta.SyntheticFields.FourierBandVectorField")],-1)),e[9]||(e[9]=s()),a(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[23]||(e[23]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FourierBandVectorField{T, N} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> FourierSyntheticVectorField{T, N}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FourierBandVectorField</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(undef, Ls</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; [kmin], [kmax])</span></span></code></pre></div><p>Implements a synthetic vector field in Fourier space.</p>`,2)),t("p",null,[e[12]||(e[12]=s('This type is adapted for vector fields described by a relatively small number of non-zero Fourier modes. The non-zero modes are within a "band" given by ',-1)),t("mjx-container",u,[(r(),o("svg",Q,[...e[10]||(e[10]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(554,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" style="stroke-width:3;"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(833,0)" style="stroke-width:3;"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(1111,0)" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mo" transform="translate(2060.5,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(3116.3,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(3394.3,0)"><path data-c="1D48C" d="M99 -8Q71 -8 58 9T45 39Q45 51 116 336L188 622H184Q183 622 179 622T169 623T157 624T146 624T136 624T131 625Q119 628 119 642Q119 647 123 661T129 679Q133 684 144 685T220 690Q293 694 307 694Q324 694 328 679Q328 674 280 482Q231 290 231 287Q231 285 234 286Q259 302 294 334T356 390T420 433T493 452Q528 452 546 427T564 364Q564 308 538 282T480 256Q456 256 441 269T425 308Q425 339 444 359T483 384L502 389Q502 395 496 398Q493 400 483 400Q465 400 449 395T409 374T373 347T323 305T268 257Q274 256 282 256Q312 251 329 247T371 232T411 202Q431 181 431 146Q431 132 427 110T422 73Q422 44 440 44H442Q462 44 478 64T502 102T514 141Q518 157 522 159T547 162H558Q578 162 578 148Q578 118 537 56T440 -7H432Q374 -7 337 21T299 94Q299 103 301 116T304 139Q304 164 281 181T235 202L212 206H211Q176 47 160 24Q137 -8 99 -8Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(3998.3,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(4554.1,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(5609.9,0)"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(554,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" style="stroke-width:3;"></path><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(833,0)" style="stroke-width:3;"></path><path data-c="78" d="M201 0Q189 3 102 3Q26 3 17 0H11V46H25Q48 47 67 52T96 61T121 78T139 96T160 122T180 150L226 210L168 288Q159 301 149 315T133 336T122 351T113 363T107 370T100 376T94 379T88 381T80 383Q74 383 44 385H16V431H23Q59 429 126 429Q219 429 229 431H237V385Q201 381 201 369Q201 367 211 353T239 315T268 274L272 270L297 304Q329 345 329 358Q329 364 327 369T322 376T317 380T310 384L307 385H302V431H309Q324 428 408 428Q487 428 493 431H499V385H492Q443 385 411 368Q394 360 377 341T312 257L296 236L358 151Q424 61 429 57T446 50Q464 46 499 46H516V0H510H502Q494 1 482 1T457 2T432 2T414 3Q403 3 377 3T327 1L304 0H295V46H298Q309 46 320 51T331 63Q331 65 291 120L250 175Q249 174 219 133T185 88Q181 83 181 74Q181 63 188 55T206 46Q208 46 208 23V0H201Z" transform="translate(1333,0)" style="stroke-width:3;"></path></g></g></g></g></g>',1)])])),e[11]||(e[11]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("msub",null,[t("mi",null,"k"),t("mrow",{"data-mjx-texclass":"ORD"},[t("mo",{"data-mjx-texclass":"OP",movablelimits:"true"},"min")])]),t("mo",null,"≤"),t("mo",{"data-mjx-texclass":"ORD",stretchy:"false"},"|"),t("mi",{mathvariant:"bold-italic"},"k"),t("mo",{"data-mjx-texclass":"ORD",stretchy:"false"},"|"),t("mo",null,"≤"),t("msub",null,[t("mi",null,"k"),t("mrow",{"data-mjx-texclass":"ORD"},[t("mo",{"data-mjx-texclass":"OP",movablelimits:"true"},"max")])])])],-1))]),e[13]||(e[13]=s(".",-1))]),e[24]||(e[24]=l('<p>One should initialise the Fourier coefficients of the vector field before performing any evaluations. For this one can call <a href="/VortexPasta.jl/stable/modules/SyntheticFields#VortexPasta.SyntheticFields.init_coefficients!"><code>SyntheticFields.init_coefficients!</code></a> after creating the vector field. After that, one can evaluate the field as described in <a href="/VortexPasta.jl/stable/modules/SyntheticFields#VortexPasta.SyntheticFields.SyntheticVectorField"><code>SyntheticVectorField</code></a>.</p><p>Moreover the state can be saved to an HDF5 file with <a href="/VortexPasta.jl/stable/modules/SyntheticFields#VortexPasta.SyntheticFields.save_coefficients"><code>SyntheticFields.save_coefficients</code></a> and loaded back with <a href="/VortexPasta.jl/stable/modules/SyntheticFields#VortexPasta.SyntheticFields.load_coefficients!"><code>SyntheticFields.load_coefficients!</code></a>.</p><p><strong>Positional arguments</strong></p>',3)),t("ul",null,[e[21]||(e[21]=t("li",null,[t("p",null,[t("code",null,"undef"),s(": this is Julia's "),t("code",null,"undef"),s(" variable, used here to explicitly indicate that Fourier coefficients are not initialised by this function (but only allocated).")])],-1)),t("li",null,[t("p",null,[e[16]||(e[16]=t("code",null,"Ls",-1)),e[17]||(e[17]=s(": domain period in each direction. For example, ",-1)),e[18]||(e[18]=t("code",null,"Ls = (2π, 2π, 2π)",-1)),e[19]||(e[19]=s(" for a ",-1)),t("mjx-container",m,[(r(),o("svg",g,[...e[14]||(e[14]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D70B" d="M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z" style="stroke-width:3;"></path></g></g></g>',1)])])),e[15]||(e[15]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mn",null,"2"),t("mi",null,"π")])],-1))]),e[20]||(e[20]=s("-periodic cubic domain.",-1))])])]),e[25]||(e[25]=l('<p><strong>Optional keyword arguments</strong></p><ul><li><p><code>kmin</code>: minimum forcing wavenumber (magnitude);</p></li><li><p><code>kmax</code>: maximum forcing wavenumber (magnitude).</p></li></ul><p>These should satisfy <code>0 ≤ kmin ≤ kmax</code>. Moreover, one usually wants <code>0 &lt; kmin</code> to ensure that the generated field has zero mean value.</p><p>If these are not passed, an empty <code>FourierBandVectorField</code> will be returned (with no wavevectors). It can be initialised later using <a href="/VortexPasta.jl/stable/modules/SyntheticFields#VortexPasta.SyntheticFields.set_wavevector_band!"><code>set_wavevector_band!</code></a>.</p>',4)),a(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[22]||(e[22]=[t("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",y,[t("summary",null,[e[26]||(e[26]=t("a",{id:"VortexPasta.SyntheticFields.set_wavevector_band!",href:"#VortexPasta.SyntheticFields.set_wavevector_band!"},[t("span",{class:"jlbinding"},"VortexPasta.SyntheticFields.set_wavevector_band!")],-1)),e[27]||(e[27]=s()),a(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[29]||(e[29]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SyntheticFields</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_wavevector_band!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(field</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FourierBandVectorField</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kmin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kmax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Set active wavevectors of field within a Fourier band.</p><p>This will set the normalised wavevectors <code>fields.qs</code> and resize the coefficients <code>fields.cs</code>.</p>',3)),a(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[28]||(e[28]=[t("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",f,[t("summary",null,[e[30]||(e[30]=t("a",{id:"VortexPasta.SyntheticFields.init_coefficients!",href:"#VortexPasta.SyntheticFields.init_coefficients!"},[t("span",{class:"jlbinding"},"VortexPasta.SyntheticFields.init_coefficients!")],-1)),e[31]||(e[31]=s()),a(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[33]||(e[33]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SyntheticFields</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">init_coefficients!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([rng</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRNG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,] f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FourierBandVectorField</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, u_rms</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Initialise Fourier coefficients of vector field.</p><p>The &quot;active&quot; Fourier modes are chosen randomly following a normal distribution such that the resulting velocity components have an rms value given by <code>u_rms</code> (on average). The generated field is divergence-free (in 3D).</p><p><strong>Positional arguments</strong></p><ul><li><p><code>rng</code> (optional): random number generator for determining Fourier coefficients of the forcing velocity field. Default value is <code>Random.default_rng()</code>.</p></li><li><p><code>f</code>: field to be initialised (of type <a href="/VortexPasta.jl/stable/modules/SyntheticFields#VortexPasta.SyntheticFields.FourierBandVectorField"><code>FourierBandVectorField</code></a>).</p></li><li><p><code>u_rms</code>: typical magnitude (rms value) of <em>each</em> vector component.</p></li></ul><p>The total rms value of the vector field is <code>N * u_rms</code> where <code>N</code> is the number of dimensions. Note that the rms value of a single component may slightly differ from <code>u_rms</code>.</p>',6)),a(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[32]||(e[32]=[t("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",F,[t("summary",null,[e[34]||(e[34]=t("a",{id:"VortexPasta.SyntheticFields.from_fourier_grid!",href:"#VortexPasta.SyntheticFields.from_fourier_grid!"},[t("span",{class:"jlbinding"},"VortexPasta.SyntheticFields.from_fourier_grid!")],-1)),e[35]||(e[35]=s()),a(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[55]||(e[55]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SyntheticFields</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">from_fourier_grid!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [op</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], field</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FourierBandVectorField{T, N}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ûs_grid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NTuple{N, AbstractArray}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ks_grid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NTuple{N, AbstractVector}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Copy values from vector field <code>ûs_grid</code> in Fourier space onto a <a href="/VortexPasta.jl/stable/modules/SyntheticFields#VortexPasta.SyntheticFields.FourierBandVectorField"><code>FourierBandVectorField</code></a>.</p><p>Only the wavenumbers within the band <code>[kmin, kmax]</code> in which <code>field</code> is defined are copied.</p><p>The <code>ks_grid</code> argument should contain the wavevectors associated to the grid where <code>ûs_grid</code> is defined.</p>`,4)),t("p",null,[e[38]||(e[38]=s("By default, old values in ",-1)),e[39]||(e[39]=t("code",null,"field",-1)),e[40]||(e[40]=s(" are discarded and are simply replaced by the values in ",-1)),e[41]||(e[41]=t("code",null,"ûs_grid",-1)),e[42]||(e[42]=s(". One can use the optional ",-1)),e[43]||(e[43]=t("code",null,"op",-1)),e[44]||(e[44]=s(" argument to change this behaviour, which should be a function ",-1)),e[45]||(e[45]=t("code",null,"op(old, new, k⃗)",-1)),e[46]||(e[46]=s(" taking 3 ",-1)),e[47]||(e[47]=t("code",null,"SVector{N}",-1)),e[48]||(e[48]=s(". For example, passing ",-1)),e[49]||(e[49]=t("code",null,"op(old, new, k⃗) = old - new * sum(abs2, k⃗)",-1)),e[50]||(e[50]=s(" means that new values are first multiplied by ",-1)),t("mjx-container",x,[(r(),o("svg",V,[...e[36]||(e[36]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(278,0)"><path data-c="1D48C" d="M99 -8Q71 -8 58 9T45 39Q45 51 116 336L188 622H184Q183 622 179 622T169 623T157 624T146 624T136 624T131 625Q119 628 119 642Q119 647 123 661T129 679Q133 684 144 685T220 690Q293 694 307 694Q324 694 328 679Q328 674 280 482Q231 290 231 287Q231 285 234 286Q259 302 294 334T356 390T420 433T493 452Q528 452 546 427T564 364Q564 308 538 282T480 256Q456 256 441 269T425 308Q425 339 444 359T483 384L502 389Q502 395 496 398Q493 400 483 400Q465 400 449 395T409 374T373 347T323 305T268 257Q274 256 282 256Q312 251 329 247T371 232T411 202Q431 181 431 146Q431 132 427 110T422 73Q422 44 440 44H442Q462 44 478 64T502 102T514 141Q518 157 522 159T547 162H558Q578 162 578 148Q578 118 537 56T440 -7H432Q374 -7 337 21T299 94Q299 103 301 116T304 139Q304 164 281 181T235 202L212 206H211Q176 47 160 24Q137 -8 99 -8Z" style="stroke-width:3;"></path></g><g data-mml-node="msup" transform="translate(882,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(311,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g></g></g></g>',1)])])),e[37]||(e[37]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mo",{"data-mjx-texclass":"ORD",stretchy:"false"},"|"),t("mi",{mathvariant:"bold-italic"},"k"),t("msup",null,[t("mo",{"data-mjx-texclass":"ORD",stretchy:"false"},"|"),t("mn",null,"2")])])],-1))]),e[51]||(e[51]=s(" and then subtracted from previously existent ones. The result is then written onto ",-1)),e[52]||(e[52]=t("code",null,"field",-1)),e[53]||(e[53]=s(".",-1))]),a(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[54]||(e[54]=[t("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",b,[t("summary",null,[e[56]||(e[56]=t("a",{id:"VortexPasta.SyntheticFields.remove_zeros!",href:"#VortexPasta.SyntheticFields.remove_zeros!"},[t("span",{class:"jlbinding"},"VortexPasta.SyntheticFields.remove_zeros!")],-1)),e[57]||(e[57]=s()),a(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[59]||(e[59]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SyntheticFields</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">remove_zeros!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(field</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FourierBandVectorField</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Int</span></span></code></pre></div><p>Remove entries associated to Fourier coefficients which are currently equal to zero.</p><p>Returns the number of removed coefficients. Coefficients and their associated wavevectors are removed.</p><p>This can help avoid useless computations when evaluating the Fourier sum in physical space.</p>',4)),a(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[58]||(e[58]=[t("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),e[84]||(e[84]=t("h2",{id:"Saving-and-loading-data",tabindex:"-1"},[s("Saving and loading data "),t("a",{class:"header-anchor",href:"#Saving-and-loading-data","aria-label":'Permalink to "Saving and loading data {#Saving-and-loading-data}"'},"​")],-1)),t("details",E,[t("summary",null,[e[60]||(e[60]=t("a",{id:"VortexPasta.SyntheticFields.save_coefficients",href:"#VortexPasta.SyntheticFields.save_coefficients"},[t("span",{class:"jlbinding"},"VortexPasta.SyntheticFields.save_coefficients")],-1)),e[61]||(e[61]=s()),a(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[63]||(e[63]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SyntheticFields</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">save_coefficients</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fname</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, field</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FourierBandVectorField</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SyntheticFields</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">save_coefficients</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{HDF5.File, HDF5.Group}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, field</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FourierBandVectorField</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Save Fourier coefficients to HDF5 file.</p><p>This can be useful for restarting a simulation keeping the same synthetic field.</p><p>See also <a href="/VortexPasta.jl/stable/modules/SyntheticFields#VortexPasta.SyntheticFields.load_coefficients!"><code>SyntheticFields.load_coefficients!</code></a>.</p>`,4)),a(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[62]||(e[62]=[t("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",v,[t("summary",null,[e[64]||(e[64]=t("a",{id:"VortexPasta.SyntheticFields.load_coefficients!",href:"#VortexPasta.SyntheticFields.load_coefficients!"},[t("span",{class:"jlbinding"},"VortexPasta.SyntheticFields.load_coefficients!")],-1)),e[65]||(e[65]=s()),a(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[67]||(e[67]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SyntheticFields</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">load_coefficients!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fname</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, field</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FourierBandVectorField</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SyntheticFields</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">load_coefficients!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{HDF5.File, HDF5.Group}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, field</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FourierBandVectorField</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Load Fourier coefficients from HDF5 file.</p><p>This can be useful for restarting a simulation keeping the same synthetic field.</p><p>See also <a href="/VortexPasta.jl/stable/modules/SyntheticFields#VortexPasta.SyntheticFields.save_coefficients"><code>SyntheticFields.save_coefficients</code></a>.</p>`,4)),a(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[66]||(e[66]=[t("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),e[85]||(e[85]=t("h2",{id:"Abstract-types",tabindex:"-1"},[s("Abstract types "),t("a",{class:"header-anchor",href:"#Abstract-types","aria-label":'Permalink to "Abstract types {#Abstract-types}"'},"​")],-1)),t("details",S,[t("summary",null,[e[68]||(e[68]=t("a",{id:"VortexPasta.SyntheticFields.SyntheticVectorField",href:"#VortexPasta.SyntheticFields.SyntheticVectorField"},[t("span",{class:"jlbinding"},"VortexPasta.SyntheticFields.SyntheticVectorField")],-1)),e[69]||(e[69]=s()),a(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[75]||(e[75]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SyntheticVectorField{T, N} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Function</span></span></code></pre></div>',1)),t("p",null,[e[72]||(e[72]=s("Abstract type representing a synthetic vector field in ",-1)),t("mjx-container",_,[(r(),o("svg",C,[...e[70]||(e[70]=[t("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[t("g",{"data-mml-node":"math"},[t("g",{"data-mml-node":"mi"},[t("path",{"data-c":"1D441",d:"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z",style:{"stroke-width":"3"}})])])],-1)])])),e[71]||(e[71]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"N")])],-1))]),e[73]||(e[73]=s(" dimensions.",-1))]),e[76]||(e[76]=l("<p>Here <code>T &lt;: AbstractFloat</code> is the type of the returned values when evaluating the field at a position.</p><p>A field can be evaluated using the <code>f(x⃗)</code> syntax, where <code>f</code> is a <code>SyntheticVectorField</code> and <code>x⃗</code> is a physical location, returning an <code>SVector{N, T}</code>. Here <code>x⃗</code> can be an <code>N</code>-element tuple or <code>SVector</code>.</p>",2)),a(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[74]||(e[74]=[t("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",w,[t("summary",null,[e[77]||(e[77]=t("a",{id:"VortexPasta.SyntheticFields.FourierSyntheticVectorField",href:"#VortexPasta.SyntheticFields.FourierSyntheticVectorField"},[t("span",{class:"jlbinding"},"VortexPasta.SyntheticFields.FourierSyntheticVectorField")],-1)),e[78]||(e[78]=s()),a(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[80]||(e[80]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FourierSyntheticVectorField{T, N} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SyntheticVectorField{T, N}</span></span></code></pre></div><p>Abstract type representing a synthetic vector field implemented in Fourier space.</p><p>See also <a href="/VortexPasta.jl/stable/modules/SyntheticFields#VortexPasta.SyntheticFields.SyntheticVectorField"><code>SyntheticVectorField</code></a>.</p>',3)),a(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[79]||(e[79]=[t("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const N=d(h,[["render",j]]);export{M as __pageData,N as default};
