import{_ as d,C as p,c as l,o as r,j as e,a as t,aA as a,G as n,w as o}from"./chunks/framework.BaRYLbWR.js";const D=JSON.parse('{"title":"Reconnections","description":"","frontmatter":{},"headers":[],"relativePath":"modules/Reconnections.md","filePath":"modules/Reconnections.md","lastUpdated":null}'),h={name:"modules/Reconnections.md"},c={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},m={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},g={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.09ex"},xmlns:"http://www.w3.org/2000/svg",width:"3.52ex",height:"1.595ex",role:"img",focusable:"false",viewBox:"0 -665 1555.8 705","aria-hidden":"true"},u={class:"jldocstring custom-block",open:""},Q={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},f={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},E={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"22.322ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 9866.1 1000","aria-hidden":"true"},x={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},b={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.023ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.061ex",height:"1.618ex",role:"img",focusable:"false",viewBox:"0 -705 469 715","aria-hidden":"true"},w={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},V={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"6.287ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 2778.7 1000","aria-hidden":"true"},_={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""};function F(v,s,R,j,A,P){const i=p("Badge");return r(),l("div",null,[s[55]||(s[55]=e("h1",{id:"Reconnections",tabindex:"-1"},[t("Reconnections "),e("a",{class:"header-anchor",href:"#Reconnections","aria-label":'Permalink to "Reconnections {#Reconnections}"'},"​")],-1)),e("details",c,[e("summary",null,[s[0]||(s[0]=e("a",{id:"VortexPasta.Reconnections",href:"#VortexPasta.Reconnections"},[e("span",{class:"jlbinding"},"VortexPasta.Reconnections")],-1)),s[1]||(s[1]=t()),n(i,{type:"info",class:"jlObjectType jlModule",text:"Module"})]),s[3]||(s[3]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Reconnections</span></span></code></pre></div><p>Module for dealing with the reconnection of filaments.</p>',2)),n(i,{type:"info",class:"source-link",text:"source"},{default:o(()=>[...s[2]||(s[2]=[e("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s[56]||(s[56]=e("p",null,[t("Reconnections are generally performed by choosing a "),e("a",{href:"/VortexPasta.jl/stable/modules/Reconnections#Reconnection-criteria"},"reconnection criterion"),t(" and then calling "),e("a",{href:"/VortexPasta.jl/stable/modules/Reconnections#VortexPasta.Reconnections.reconnect!"},[e("code",null,"reconnect!")]),t(".")],-1)),s[57]||(s[57]=e("h2",{id:"Functions",tabindex:"-1"},[t("Functions "),e("a",{class:"header-anchor",href:"#Functions","aria-label":'Permalink to "Functions {#Functions}"'},"​")],-1)),e("details",k,[e("summary",null,[s[4]||(s[4]=e("a",{id:"VortexPasta.Reconnections.init_cache",href:"#VortexPasta.Reconnections.init_cache"},[e("span",{class:"jlbinding"},"VortexPasta.Reconnections.init_cache")],-1)),s[5]||(s[5]=t()),n(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[7]||(s[7]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Reconnections</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">init_cache</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    crit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ReconnectionCriterion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector{&lt;:AbstractFilament}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Ls</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NTuple{3, Real}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Infinity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Infinity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Infinity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractReconnectionCache</span></span></code></pre></div><p>Initialise reconnection cache.</p><p>Required arguments are a reconnection criterion <code>crit</code> and the domain dimensions (or <em>periods</em>) <code>Ls</code>. The type of cache will vary depending on the chosen reconnection criterion.</p>`,3)),n(i,{type:"info",class:"source-link",text:"source"},{default:o(()=>[...s[6]||(s[6]=[e("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),e("details",T,[e("summary",null,[s[8]||(s[8]=e("a",{id:"VortexPasta.Reconnections.reconnect!",href:"#VortexPasta.Reconnections.reconnect!"},[e("span",{class:"jlbinding"},"VortexPasta.Reconnections.reconnect!")],-1)),s[9]||(s[9]=t()),n(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[17]||(s[17]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">reconnect!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    cache</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractReconnectionCache</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector{&lt;:AbstractFilament}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [vs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector{&lt;:AbstractVector}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NamedTuple</span></span></code></pre></div><p>Perform filament reconnections according to chosen criterion.</p><p>Note that, when a filament self-reconnects, this creates new filaments, which are appended at the end of <code>fs</code>.</p>`,3)),e("p",null,[s[12]||(s[12]=t("Moreover, this function will remove reconnected filaments if their number of nodes is too small (typically ",-1)),e("mjx-container",m,[(r(),l("svg",g,[...s[10]||(s[10]=[a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(1055.8,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width:3;"></path></g></g></g>',1)])])),s[11]||(s[11]=e("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mo",null,"<"),e("mn",null,"3")])],-1))]),s[13]||(s[13]=t(", see ",-1)),s[14]||(s[14]=e("a",{href:"/VortexPasta.jl/stable/modules/Filaments#VortexPasta.Filaments.check_nodes"},[e("code",null,"check_nodes")],-1)),s[15]||(s[15]=t(").",-1))]),s[18]||(s[18]=a('<p>Optionally, <code>vs</code> can be a vector containing all instantaneous filament velocities. In this case, this will be used to discard reconnections between filaments which are moving in opposite directions. This is required if the <a href="/VortexPasta.jl/stable/modules/Reconnections#VortexPasta.Reconnections.ReconnectBasedOnDistance"><code>ReconnectBasedOnDistance</code></a> criterion is used with its option <code>use_velocity = true</code> (default if <code>max_passes = 1</code>).</p><p><strong>Returns</strong></p><p>This function returns a <code>NamedTuple</code> with fields:</p><ul><li><p><code>reconnection_count</code>: <strong>number of reconnections</strong>;</p></li><li><p><code>reconnection_length_loss</code>: <strong>decrease of filament length due to reconnections</strong>. This is simply an estimate for the difference in filament length before and after a reconnection. It is unrelated to (and does not include) filament removal (see below). Uses the straight segment approximation;</p></li><li><p><code>filaments_removed_count</code>: <strong>number of filaments removed after reconnection</strong>. This happens when a filament reconnects with itself, splitting into two new filaments, and one or both of these filaments have an insufficient number of discretisation nodes;</p></li><li><p><code>filaments_removed_length</code>: <strong>length of removed filaments</strong>. We use a straight segment approximation (no quadratures) to estimate the filament lengths.</p></li></ul><p><strong>Callback function</strong></p><p>Optionally, one may pass a callback which will be called whenever the vector of filaments <code>fs</code> is modified. Its signature must be the following:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractFilament</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, mode</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>where <code>f</code> is the modified filament, <code>i</code> is its index in <code>fs</code>, and <code>mode</code> is one of:</p><ul><li><p><code>:modified</code> if the filament <code>fs[i]</code> was modified;</p></li><li><p><code>:appended</code> if the filament was appended at the end of <code>fs</code> (at index <code>i</code>);</p></li><li><p><code>:removed</code> if the filament previously located at index <code>i</code> was removed.</p></li></ul>',9)),n(i,{type:"info",class:"source-link",text:"source"},{default:o(()=>[...s[16]||(s[16]=[e("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s[58]||(s[58]=e("h2",{id:"Reconnection-criteria",tabindex:"-1"},[t("Reconnection criteria "),e("a",{class:"header-anchor",href:"#Reconnection-criteria","aria-label":'Permalink to "Reconnection criteria {#Reconnection-criteria}"'},"​")],-1)),e("details",u,[e("summary",null,[s[19]||(s[19]=e("a",{id:"VortexPasta.Reconnections.ReconnectionCriterion",href:"#VortexPasta.Reconnections.ReconnectionCriterion"},[e("span",{class:"jlbinding"},"VortexPasta.Reconnections.ReconnectionCriterion")],-1)),s[20]||(s[20]=t()),n(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[22]||(s[22]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ReconnectionCriterion</span></span></code></pre></div><p>Abstract type describing a criterion for filament reconnections.</p><p>Implemented reconnection criteria include:</p><ul><li><p><a href="/VortexPasta.jl/stable/modules/Reconnections#VortexPasta.Reconnections.NoReconnections"><code>NoReconnections</code></a>: disables reconnections;</p></li><li><p><a href="/VortexPasta.jl/stable/modules/Reconnections#VortexPasta.Reconnections.ReconnectBasedOnDistance"><code>ReconnectBasedOnDistance</code></a>: reconnects filament segments which are closer than a critical distance;</p></li><li><p><a href="/VortexPasta.jl/stable/modules/Reconnections#VortexPasta.Reconnections.ReconnectFast"><code>ReconnectFast</code></a>: considers segments as straight lines, enabling to perform all required reconnections in a single pass.</p></li></ul>',4)),n(i,{type:"info",class:"source-link",text:"source"},{default:o(()=>[...s[21]||(s[21]=[e("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),e("details",Q,[e("summary",null,[s[23]||(s[23]=e("a",{id:"VortexPasta.Reconnections.NoReconnections",href:"#VortexPasta.Reconnections.NoReconnections"},[e("span",{class:"jlbinding"},"VortexPasta.Reconnections.NoReconnections")],-1)),s[24]||(s[24]=t()),n(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[26]||(s[26]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">NoReconnections </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ReconnectionCriterion</span></span></code></pre></div><p>Used to disable filament reconnections.</p>',2)),n(i,{type:"info",class:"source-link",text:"source"},{default:o(()=>[...s[25]||(s[25]=[e("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),e("details",y,[e("summary",null,[s[27]||(s[27]=e("a",{id:"VortexPasta.Reconnections.ReconnectBasedOnDistance",href:"#VortexPasta.Reconnections.ReconnectBasedOnDistance"},[e("span",{class:"jlbinding"},"VortexPasta.Reconnections.ReconnectBasedOnDistance")],-1)),s[28]||(s[28]=t()),n(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[46]||(s[46]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ReconnectBasedOnDistance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ReconnectionCriterion</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ReconnectBasedOnDistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d_crit; max_passes </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, use_velocity </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (max_passes </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), decrease_length </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cos_max </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.97</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Reconnects filament segments which are at a distance <code>d &lt; d_crit</code>.</p><p><strong>Optional keyword arguments</strong></p>`,3)),e("ul",null,[s[44]||(s[44]=a("<li><p><code>use_velocity</code>: if <code>true</code> (default), use filament velocity information in reconnections. For now, this is used to discard a reconnection between two points if they are instantaneously getting away from each other. If <code>max_passes &gt; 1</code>, then <code>use_velocity</code> <strong>must</strong> be set to <code>false</code>.</p></li><li><p><code>max_passes</code>: maximum number of scans through all segment pairs to detect and perform reconnections. In a single pass, a filament can only be reconnected at most once. Therefore, this parameter can be useful to make sure that all required reconnections have been performed. <strong>Setting <code>max_passes &gt; 1</code> also requires <code>use_velocity = false</code>.</strong></p></li><li><p><code>decrease_length</code>: if <code>true</code> (default), a reconnection will only be performed if it will decrease the total filament length. Since, for vortices, the total energy is roughly related to the vortex length, this means that reconnections should always tend to dissipate energy.</p></li>",3)),e("li",null,[e("p",null,[s[35]||(s[35]=e("code",null,"cos_max",-1)),s[36]||(s[36]=t(': allows to disable reconnections of nearly parallel segments. Two segments are considered to be "nearly parallel" if ',-1)),s[37]||(s[37]=e("code",null,"cos(θ) > cos_max",-1)),s[38]||(s[38]=t(". The default value ",-1)),s[39]||(s[39]=e("code",null,"cos_max = 0.97",-1)),s[40]||(s[40]=t(" disables reconnections when the angle between lines is ",-1)),e("mjx-container",f,[(r(),l("svg",E,[...s[29]||(s[29]=[a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(746.8,0)"><path data-c="3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1802.6,0)"><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" style="stroke-width:3;"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(500,0)" style="stroke-width:3;"></path><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z" transform="translate(892,0)" style="stroke-width:3;"></path><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z" transform="translate(1336,0)" style="stroke-width:3;"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(1780,0)" style="stroke-width:3;"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(2280,0)" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(4476.6,0)"><path data-c="2061" d="" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(4476.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(4865.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" style="stroke-width:3;"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)" style="stroke-width:3;"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(778,0)" style="stroke-width:3;"></path><path data-c="37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z" transform="translate(1278,0)" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(6643.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(7310.3,0)"><path data-c="2248" d="M55 319Q55 360 72 393T114 444T163 472T205 482Q207 482 213 482T223 483Q262 483 296 468T393 413L443 381Q502 346 553 346Q609 346 649 375T694 454Q694 465 698 474T708 483Q722 483 722 452Q722 386 675 338T555 289Q514 289 468 310T388 357T308 404T224 426Q164 426 125 393T83 318Q81 289 69 289Q55 289 55 319ZM55 85Q55 126 72 159T114 210T163 238T205 248Q207 248 213 248T223 249Q262 249 296 234T393 179L443 147Q502 112 553 112Q609 112 649 141T694 220Q694 249 708 249T722 217Q722 153 675 104T555 55Q514 55 468 76T388 123T308 170T224 192Q164 192 125 159T83 84Q80 55 69 55Q55 55 55 85Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(8366.1,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(500,0)" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(9366.1,0)"><g data-mml-node="mo"><path data-c="B0" d="M147 628Q147 669 179 692T244 715Q298 715 325 689T352 629Q352 592 323 567T249 542Q202 542 175 567T147 628ZM313 628Q313 660 300 669T259 678H253Q248 678 242 678T234 679Q217 679 207 674T192 659T188 644T187 629Q187 600 198 590Q210 579 250 579H265Q279 579 288 581T305 595T313 628Z" style="stroke-width:3;"></path></g></g></g></g>',1)])])),s[30]||(s[30]=e("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mi",null,"θ"),e("mo",null,"<"),e("mi",null,"arccos"),e("mo",{"data-mjx-texclass":"NONE"},"⁡"),e("mo",{stretchy:"false"},"("),e("mn",null,"0.97"),e("mo",{stretchy:"false"},")"),e("mo",null,"≈"),e("mn",null,"14"),e("mrow",{"data-mjx-texclass":"ORD"},[e("mo",{"data-mjx-pseudoscript":"true"},"°")])])],-1))]),s[41]||(s[41]=t(". Note that the angle ",-1)),e("mjx-container",x,[(r(),l("svg",b,[...s[31]||(s[31]=[e("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[e("g",{"data-mml-node":"math"},[e("g",{"data-mml-node":"mi"},[e("path",{"data-c":"1D703",d:"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z",style:{"stroke-width":"3"}})])])],-1)])])),s[32]||(s[32]=e("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mi",null,"θ")])],-1))]),s[42]||(s[42]=t(" is signed (it takes values in ",-1)),e("mjx-container",w,[(r(),l("svg",V,[...s[33]||(s[33]=[a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(278,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(1056,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1556,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(2000.7,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2500.7,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z" style="stroke-width:3;"></path></g></g></g>',1)])])),s[34]||(s[34]=e("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mo",{stretchy:"false"},"["),e("mo",null,"−"),e("mn",null,"1"),e("mo",null,","),e("mn",null,"1"),e("mo",{stretchy:"false"},"]")])],-1))]),s[43]||(s[43]=t("). Negative angles mean that the segments are antiparallel, and in this case reconnections are always performed.",-1))])])]),n(i,{type:"info",class:"source-link",text:"source"},{default:o(()=>[...s[45]||(s[45]=[e("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),e("details",_,[e("summary",null,[s[47]||(s[47]=e("a",{id:"VortexPasta.Reconnections.ReconnectFast",href:"#VortexPasta.Reconnections.ReconnectFast"},[e("span",{class:"jlbinding"},"VortexPasta.Reconnections.ReconnectFast")],-1)),s[48]||(s[48]=t()),n(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[50]||(s[50]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ReconnectFast </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ReconnectionCriterion</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ReconnectFast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d_crit; max_passes </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, nthreads </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Threads</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nthreads</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), use_velocity </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, decrease_length </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cos_max </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.97</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Reconnects filament segments which are at a distance <code>d &lt; d_crit</code>.</p><p>This criterion is similar to <a href="/VortexPasta.jl/stable/modules/Reconnections#VortexPasta.Reconnections.ReconnectBasedOnDistance"><code>ReconnectBasedOnDistance</code></a> but with important differences:</p><ul><li><p>filament segments are considered as straight lines (which may be less accurate);</p></li><li><p>each filament can be reconnected multiple times, meaning that fewer passes are needed to perform all required reconnections;</p></li><li><p>one can combine <code>use_velocity = true</code> with <code>max_passes &gt; 1</code>.</p></li></ul><p>Moreover, this criterion accepts an <code>nthreads</code> option which allows to manually choose the number of threads to use. In particular, if <code>nthreads = 1</code>, a serial implementation will be used which generally needs a small number of passes (so it can in fact be faster if running with a small number of threads).</p><p>This criterion only supports periodic domains.</p><p>See <a href="/VortexPasta.jl/stable/modules/Reconnections#VortexPasta.Reconnections.ReconnectBasedOnDistance"><code>ReconnectBasedOnDistance</code></a> for details on criterion parameters.</p>`,7)),n(i,{type:"info",class:"source-link",text:"source"},{default:o(()=>[...s[49]||(s[49]=[e("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s[59]||(s[59]=e("h2",{id:"Internals",tabindex:"-1"},[t("Internals "),e("a",{class:"header-anchor",href:"#Internals","aria-label":'Permalink to "Internals {#Internals}"'},"​")],-1)),e("details",C,[e("summary",null,[s[51]||(s[51]=e("a",{id:"VortexPasta.Reconnections.should_reconnect",href:"#VortexPasta.Reconnections.should_reconnect"},[e("span",{class:"jlbinding"},"VortexPasta.Reconnections.should_reconnect")],-1)),s[52]||(s[52]=t()),n(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[54]||(s[54]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">should_reconnect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ReconnectBasedOnDistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractFilament</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractFilament</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, j</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    periods,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Union{Nothing, NamedTuple}</span></span></code></pre></div><p>Check whether two filaments should reconnect according to the chosen criterion.</p><p>Checks for a possible reconnection between filament segments <code>fx[i:i+1]</code> and <code>fy[j:j+1]</code>.</p><p>If the filament segments should reconnect, this function returns a <code>NamedTuple</code> with reconnection information, which includes in particular all the fields returned by <a href="/VortexPasta.jl/stable/modules/Filaments#VortexPasta.Filaments.find_min_distance"><code>find_min_distance</code></a>.</p><p>Otherwise, returns <code>nothing</code> if the filament segments should not reconnect.</p>`,5)),n(i,{type:"info",class:"source-link",text:"source"},{default:o(()=>[...s[53]||(s[53]=[e("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const B=d(h,[["render",F]]);export{D as __pageData,B as default};
