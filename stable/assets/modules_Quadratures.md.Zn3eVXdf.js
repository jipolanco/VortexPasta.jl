import{_ as d,C as p,c as n,o,j as e,a as s,aA as l,G as i,w as r}from"./chunks/framework.BaRYLbWR.js";const N=JSON.parse('{"title":"Quadratures","description":"","frontmatter":{},"headers":[],"relativePath":"modules/Quadratures.md","filePath":"modules/Quadratures.md","lastUpdated":null}'),u={name:"modules/Quadratures.md"},h={class:"jldocstring custom-block",open:""},k={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},g={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"4.526ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 2000.7 1000","aria-hidden":"true"},m={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},T={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"6.287ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 2778.7 1000","aria-hidden":"true"},c={class:"jldocstring custom-block",open:""},Q={class:"jldocstring custom-block",open:""},y={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},x={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"2.009ex",height:"1.545ex",role:"img",focusable:"false",viewBox:"0 -683 888 683","aria-hidden":"true"},b={class:"jldocstring custom-block",open:""},f={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},v={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"2.009ex",height:"1.545ex",role:"img",focusable:"false",viewBox:"0 -683 888 683","aria-hidden":"true"},E={class:"jldocstring custom-block",open:""},w={class:"jldocstring custom-block",open:""},V={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},_={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},F={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"2.009ex",height:"1.545ex",role:"img",focusable:"false",viewBox:"0 -683 888 683","aria-hidden":"true"},A={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},P={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"4.526ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 2000.7 1000","aria-hidden":"true"},S={class:"jldocstring custom-block",open:""};function H(q,t,M,D,B,L){const a=p("Badge");return o(),n("div",null,[t[66]||(t[66]=e("h1",{id:"Quadratures",tabindex:"-1"},[s("Quadratures "),e("a",{class:"header-anchor",href:"#Quadratures","aria-label":'Permalink to "Quadratures {#Quadratures}"'},"​")],-1)),e("details",h,[e("summary",null,[t[0]||(t[0]=e("a",{id:"VortexPasta.Quadratures",href:"#VortexPasta.Quadratures"},[e("span",{class:"jlbinding"},"VortexPasta.Quadratures")],-1)),t[1]||(t[1]=s()),i(a,{type:"info",class:"jlObjectType jlModule",text:"Module"})]),t[10]||(t[10]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Quadratures</span></span></code></pre></div><p>Module defining quadrature rules for numerical integration along filaments.</p><p>Quadrature rules are determined using the <a href="https://github.com/JuliaApproximation/FastGaussQuadrature.jl" target="_blank" rel="noreferrer">FastGaussQuadrature.jl</a> package.</p><p>See the <a href="https://en.wikipedia.org/wiki/Gaussian_quadrature" target="_blank" rel="noreferrer">Wikipedia page on Gaussian quadratures</a> for more details.</p>',4)),e("p",null,[t[6]||(t[6]=s("For convenience, quadrature rules in this module are defined on the ",-1)),e("mjx-container",k,[(o(),n("svg",g,[...t[2]||(t[2]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(278,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(778,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(1222.7,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1722.7,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z" style="stroke-width:3;"></path></g></g></g>',1)])])),t[3]||(t[3]=e("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mo",{stretchy:"false"},"["),e("mn",null,"0"),e("mo",null,","),e("mn",null,"1"),e("mo",{stretchy:"false"},"]")])],-1))]),t[7]||(t[7]=s(" interval, as opposed to the standard ",-1)),e("mjx-container",m,[(o(),n("svg",T,[...t[4]||(t[4]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(278,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(1056,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1556,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(2000.7,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2500.7,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z" style="stroke-width:3;"></path></g></g></g>',1)])])),t[5]||(t[5]=e("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mo",{stretchy:"false"},"["),e("mo",null,"−"),e("mn",null,"1"),e("mo",null,","),e("mn",null,"1"),e("mo",{stretchy:"false"},"]")])],-1))]),t[8]||(t[8]=s(" interval.",-1))]),i(a,{type:"info",class:"source-link",text:"source"},{default:r(()=>[...t[9]||(t[9]=[e("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t[67]||(t[67]=e("h2",{id:"Quadrature-rules",tabindex:"-1"},[s("Quadrature rules "),e("a",{class:"header-anchor",href:"#Quadrature-rules","aria-label":'Permalink to "Quadrature rules {#Quadrature-rules}"'},"​")],-1)),e("details",c,[e("summary",null,[t[11]||(t[11]=e("a",{id:"VortexPasta.Quadratures.AbstractQuadrature",href:"#VortexPasta.Quadratures.AbstractQuadrature"},[e("span",{class:"jlbinding"},"VortexPasta.Quadratures.AbstractQuadrature")],-1)),t[12]||(t[12]=s()),i(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),t[14]||(t[14]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AbstractQuadrature</span></span></code></pre></div><p>Abstract type defining a quadrature rule.</p>',2)),i(a,{type:"info",class:"source-link",text:"source"},{default:r(()=>[...t[13]||(t[13]=[e("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t[68]||(t[68]=e("h3",{id:"Fixed-size-quadratures",tabindex:"-1"},[s("Fixed-size quadratures "),e("a",{class:"header-anchor",href:"#Fixed-size-quadratures","aria-label":'Permalink to "Fixed-size quadratures {#Fixed-size-quadratures}"'},"​")],-1)),t[69]||(t[69]=e("p",null,[s("These quadrature rules are meant to have a small size (typically less than 10). They have virtually zero creation cost, i.e. doing "),e("code",null,"quad = GaussLegendre(4)"),s(" is basically free.")],-1)),e("details",Q,[e("summary",null,[t[15]||(t[15]=e("a",{id:"VortexPasta.Quadratures.StaticSizeQuadrature",href:"#VortexPasta.Quadratures.StaticSizeQuadrature"},[e("span",{class:"jlbinding"},"VortexPasta.Quadratures.StaticSizeQuadrature")],-1)),t[16]||(t[16]=s()),i(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),t[22]||(t[22]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">StaticSizeQuadrature{N} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractQuadrature</span></span></code></pre></div>',1)),e("p",null,[t[19]||(t[19]=s("Abstract type defining an ",-1)),e("mjx-container",y,[(o(),n("svg",x,[...t[17]||(t[17]=[e("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[e("g",{"data-mml-node":"math"},[e("g",{"data-mml-node":"mi"},[e("path",{"data-c":"1D441",d:"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z",style:{"stroke-width":"3"}})])])],-1)])])),t[18]||(t[18]=e("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mi",null,"N")])],-1))]),t[20]||(t[20]=s("-point quadrature rule.",-1))]),t[23]||(t[23]=e("p",null,"These quadrature rules can be created basically for free.",-1)),i(a,{type:"info",class:"source-link",text:"source"},{default:r(()=>[...t[21]||(t[21]=[e("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),e("details",b,[e("summary",null,[t[24]||(t[24]=e("a",{id:"VortexPasta.Quadratures.GaussLegendre",href:"#VortexPasta.Quadratures.GaussLegendre"},[e("span",{class:"jlbinding"},"VortexPasta.Quadratures.GaussLegendre")],-1)),t[25]||(t[25]=s()),i(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),t[30]||(t[30]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GaussLegendre</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(N) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> StaticSizeQuadrature{N}</span></span></code></pre></div>',1)),e("p",null,[e("mjx-container",f,[(o(),n("svg",v,[...t[26]||(t[26]=[e("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[e("g",{"data-mml-node":"math"},[e("g",{"data-mml-node":"mi"},[e("path",{"data-c":"1D441",d:"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z",style:{"stroke-width":"3"}})])])],-1)])])),t[27]||(t[27]=e("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mi",null,"N")])],-1))]),t[28]||(t[28]=s("-point Gauss–Legendre quadrature.",-1))]),i(a,{type:"info",class:"source-link",text:"source"},{default:r(()=>[...t[29]||(t[29]=[e("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),e("details",E,[e("summary",null,[t[31]||(t[31]=e("a",{id:"VortexPasta.Quadratures.NoQuadrature",href:"#VortexPasta.Quadratures.NoQuadrature"},[e("span",{class:"jlbinding"},"VortexPasta.Quadratures.NoQuadrature")],-1)),t[32]||(t[32]=s()),i(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),t[34]||(t[34]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NoQuadrature</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> StaticSizeQuadrature{1}</span></span></code></pre></div><p>Inexpensive 1-point quadrature rule.</p><p>When integrating, evaluates approximated values at the segment midpoint. However, unlike a 1-point Gauss–Legendre quadrature, midpoint values are interpolated using a basic linear interpolation. In other words, segments are assumed to be straight.</p>',3)),i(a,{type:"info",class:"source-link",text:"source"},{default:r(()=>[...t[33]||(t[33]=[e("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t[70]||(t[70]=e("h3",{id:"Variable-size-quadratures",tabindex:"-1"},[s("Variable-size quadratures "),e("a",{class:"header-anchor",href:"#Variable-size-quadratures","aria-label":'Permalink to "Variable-size quadratures {#Variable-size-quadratures}"'},"​")],-1)),t[71]||(t[71]=e("p",null,"These quadrature rules should be constructed just once, as they allocate vectors. These are usually adaptive quadratures.",-1)),e("details",w,[e("summary",null,[t[35]||(t[35]=e("a",{id:"VortexPasta.Quadratures.PreallocatedQuadrature",href:"#VortexPasta.Quadratures.PreallocatedQuadrature"},[e("span",{class:"jlbinding"},"VortexPasta.Quadratures.PreallocatedQuadrature")],-1)),t[36]||(t[36]=s()),i(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),t[38]||(t[38]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PreallocatedQuadrature{T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractFloat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractQuadrature</span></span></code></pre></div><p>Abstract type defining a preallocated quadrature with element type <code>T</code>.</p><p>This is generally used for adaptive quadratures.</p>',3)),i(a,{type:"info",class:"source-link",text:"source"},{default:r(()=>[...t[37]||(t[37]=[e("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),e("details",V,[e("summary",null,[t[39]||(t[39]=e("a",{id:"VortexPasta.Quadratures.AdaptiveTanhSinh",href:"#VortexPasta.Quadratures.AdaptiveTanhSinh"},[e("span",{class:"jlbinding"},"VortexPasta.Quadratures.AdaptiveTanhSinh")],-1)),t[40]||(t[40]=s()),i(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),t[42]||(t[42]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AdaptiveTanhSinh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Float64]; nlevels </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, rtol </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sqrt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">eps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(T))) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> PreallocatedQuadrature{T}</span></span></code></pre></div><p>Adaptive <a href="https://en.wikipedia.org/wiki/Tanh-sinh_quadrature" target="_blank" rel="noreferrer">tanh-sinh quadrature</a>.</p><p>Behaves well when there are singularities at (or near) the endpoints.</p><p>It can be easily made adaptive because it can be written as a simple trapezoidal rule after a change of variables.</p><p><strong>Optional arguments</strong></p><ul><li><p><code>T = Float64</code>: quadrature precision;</p></li><li><p><code>nlevels = 10</code>: maximum number of adaptivity levels. Must be <code>≥ 2</code>;</p></li><li><p><code>rtol = sqrt(eps(T))</code>: relative tolerance.</p></li></ul><p>Computations are stopped either when the maximum adaptivity level is reached, or when the difference between two levels falls below the relative tolerance <code>rtol</code>.</p><p>Note that the maximum number of function evaluations is <code>2^nlevels</code>, so it can make sense to use a small number of levels (or a large tolerance) when function evaluations are expensive.</p>',8)),i(a,{type:"info",class:"source-link",text:"source"},{default:r(()=>[...t[41]||(t[41]=[e("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t[72]||(t[72]=e("h2",{id:"Estimating-integrals",tabindex:"-1"},[s("Estimating integrals "),e("a",{class:"header-anchor",href:"#Estimating-integrals","aria-label":'Permalink to "Estimating integrals {#Estimating-integrals}"'},"​")],-1)),e("details",C,[e("summary",null,[t[43]||(t[43]=e("a",{id:"VortexPasta.Quadratures.integrate",href:"#VortexPasta.Quadratures.integrate"},[e("span",{class:"jlbinding"},"VortexPasta.Quadratures.integrate")],-1)),t[44]||(t[44]=s()),i(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),t[46]||(t[46]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Quadratures</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">integrate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, quad</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractQuadrature</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NTuple{2,T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Quadratures</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">integrate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, quad</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractQuadrature</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Integrate <code>f(x)</code> using the chosen quadrature.</p><p>There are two variants:</p><ul><li><p>The first one requires passing the limits <code>(a, b)</code>, which should be floats of the desired accuracy;</p></li><li><p>the second one assumes the default limits <code>(0, 1)</code>, but requires setting the float type <code>T</code>. It may avoid some operations when the limits are <code>(0, 1)</code>.</p></li></ul><p>In both cases <code>T</code> must be a subtype of <code>AbstractFloat</code> (e.g. <code>Float64</code>).</p><p>Note that <code>T</code> is simply ignored for adaptive quadratures such as <a href="/VortexPasta.jl/stable/modules/Quadratures#VortexPasta.Quadratures.AdaptiveTanhSinh"><code>AdaptiveTanhSinh</code></a>, which preallocate the quadrature coefficients with a possibly different element type <code>T′</code> (which can be chosen when creating the quadrature).</p>`,6)),i(a,{type:"info",class:"source-link",text:"source"},{default:r(()=>[...t[45]||(t[45]=[e("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t[73]||(t[73]=e("h2",{id:"Computing-quadrature-rules",tabindex:"-1"},[s("Computing quadrature rules "),e("a",{class:"header-anchor",href:"#Computing-quadrature-rules","aria-label":'Permalink to "Computing quadrature rules {#Computing-quadrature-rules}"'},"​")],-1)),e("details",j,[e("summary",null,[t[47]||(t[47]=e("a",{id:"VortexPasta.Quadratures.quadrature",href:"#VortexPasta.Quadratures.quadrature"},[e("span",{class:"jlbinding"},"VortexPasta.Quadratures.quadrature")],-1)),t[48]||(t[48]=s()),i(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),t[57]||(t[57]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">quadrature</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Float64], q</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">StaticSizeQuadrature{N}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (xs, ws)</span></span></code></pre></div>',1)),e("p",null,[t[53]||(t[53]=s("Return ",-1)),e("mjx-container",_,[(o(),n("svg",F,[...t[49]||(t[49]=[e("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[e("g",{"data-mml-node":"math"},[e("g",{"data-mml-node":"mi"},[e("path",{"data-c":"1D441",d:"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z",style:{"stroke-width":"3"}})])])],-1)])])),t[50]||(t[50]=e("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mi",null,"N")])],-1))]),t[54]||(t[54]=s("-point quadrature rule valid in ",-1)),e("mjx-container",A,[(o(),n("svg",P,[...t[51]||(t[51]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(278,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(778,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(1222.7,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1722.7,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z" style="stroke-width:3;"></path></g></g></g>',1)])])),t[52]||(t[52]=e("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mo",{stretchy:"false"},"["),e("mn",null,"0"),e("mo",null,","),e("mn",null,"1"),e("mo",{stretchy:"false"},"]")])],-1))]),t[55]||(t[55]=s(" interval.",-1))]),t[58]||(t[58]=e("p",null,[s("Quadrature nodes "),e("code",null,"xs"),s(" and weights "),e("code",null,"ws"),s(" are returned as tuples.")],-1)),t[59]||(t[59]=e("p",null,[s("This only works for fixed-size (non-adaptive) quadrature rules such as "),e("a",{href:"/VortexPasta.jl/stable/modules/Quadratures#VortexPasta.Quadratures.GaussLegendre"},[e("code",null,"GaussLegendre")]),s(".")],-1)),i(a,{type:"info",class:"source-link",text:"source"},{default:r(()=>[...t[56]||(t[56]=[e("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t[74]||(t[74]=e("h2",{id:"Other-functions",tabindex:"-1"},[s("Other functions "),e("a",{class:"header-anchor",href:"#Other-functions","aria-label":'Permalink to "Other functions {#Other-functions}"'},"​")],-1)),e("details",S,[e("summary",null,[t[60]||(t[60]=e("a",{id:"Base.length",href:"#Base.length"},[e("span",{class:"jlbinding"},"Base.length")],-1)),t[61]||(t[61]=s()),i(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),t[64]||(t[64]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(q</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">StaticSizeQuadrature{N}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> N</span></span></code></pre></div><p>Return the number of points associated to the quadrature.</p>',2)),i(a,{type:"info",class:"source-link",text:"source"},{default:r(()=>[...t[62]||(t[62]=[e("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1}),t[65]||(t[65]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SegmentIterator{&lt;:AbstractFilament}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Int</span></span></code></pre></div><p>Return the number of segments in a filament.</p>',2)),i(a,{type:"info",class:"source-link",text:"source"},{default:r(()=>[...t[63]||(t[63]=[e("a",{href:"https://github.com/jipolanco/VortexPasta.jl",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const z=d(u,[["render",H]]);export{N as __pageData,z as default};
